/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Prestamos;

import Modulo_Estudiante.ExcepcionDatosIncorrectos;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wilson Xicará
 */
public class CrearPaqueteLibro extends javax.swing.JFrame {
    private Connection conexion;
    private JFrame ventanaPadre;
    private int indexLibroEditado;
    /**
     * Creates new form CrearPaqueteLibro
     */
    public CrearPaqueteLibro() {
        initComponents();
    }
    public CrearPaqueteLibro(Connection conexion, JFrame ventanaPadre) {
        initComponents();
        this.conexion = conexion;
        this.ventanaPadre = ventanaPadre;
        aceptar_edicion_libro.setVisible(false);
        cancelar_edicion_libro.setVisible(false);
        tabla_libros.setShowHorizontalLines(true);  // Para mostrar los bordes de las celdas de la tabla
        tabla_libros.setShowVerticalLines(true);
        this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codigo_libro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nombre_libro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        autor_libro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        editorial_libro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        estado_libro = new javax.swing.JComboBox<>();
        agregar_libro = new javax.swing.JButton();
        aceptar_edicion_libro = new javax.swing.JButton();
        cancelar_edicion_libro = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        codigo_paquete = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion_paquete = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_libros = new javax.swing.JTable();
        editar_libro = new javax.swing.JButton();
        eliminar_libro = new javax.swing.JButton();
        crear_paquete = new javax.swing.JButton();
        regresar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        item_listado_libros = new javax.swing.JMenuItem();
        item_listado_paquetes = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Creación de Paquetes de Libros");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registrar nuevo Libro"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Código:");

        codigo_libro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigo_libroKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setText("Autor:");

        jLabel4.setText("Editorial:");

        jLabel5.setText("Estado:");

        estado_libro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Excelente", "Bueno", "Medio", "Malo", "Muy malo" }));

        agregar_libro.setText("Agregar libro");
        agregar_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_libroActionPerformed(evt);
            }
        });

        aceptar_edicion_libro.setText("Aceptar");
        aceptar_edicion_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar_edicion_libroActionPerformed(evt);
            }
        });

        cancelar_edicion_libro.setText("Cancelar");
        cancelar_edicion_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_edicion_libroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(agregar_libro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aceptar_edicion_libro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelar_edicion_libro)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codigo_libro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estado_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre_libro, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(editorial_libro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                .addComponent(autor_libro, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigo_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombre_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(autor_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(editorial_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(estado_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar_libro)
                    .addComponent(cancelar_edicion_libro)
                    .addComponent(aceptar_edicion_libro))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Crear nuevo Paquete"));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Código:");

        codigo_paquete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigo_paqueteKeyTyped(evt);
            }
        });

        jLabel7.setText("Descripción:");

        descripcion_paquete.setColumns(20);
        descripcion_paquete.setRows(5);
        jScrollPane1.setViewportView(descripcion_paquete);

        jLabel8.setText("Libros agregados al paquete:");

        tabla_libros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Código", "Nombre", "Autor", "Editorial", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_libros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_libros.getTableHeader().setReorderingAllowed(false);
        tabla_libros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_librosMousePressed(evt);
            }
        });
        tabla_libros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_librosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_libros);

        editar_libro.setText("Editar libro");
        editar_libro.setEnabled(false);
        editar_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar_libroActionPerformed(evt);
            }
        });

        eliminar_libro.setText("Eliminar libro");
        eliminar_libro.setEnabled(false);
        eliminar_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_libroActionPerformed(evt);
            }
        });

        crear_paquete.setText("Crear Paquete");
        crear_paquete.setEnabled(false);
        crear_paquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_paqueteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(codigo_paquete, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(crear_paquete))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(editar_libro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminar_libro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(codigo_paquete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(crear_paquete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editar_libro)
                    .addComponent(eliminar_libro)))
        );

        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Los campos en negrita son obligatorios");

        jMenu1.setText("Ver");

        item_listado_libros.setText("Libros registrados");
        item_listado_libros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_listado_librosActionPerformed(evt);
            }
        });
        jMenu1.add(item_listado_libros);

        item_listado_paquetes.setText("Paquetes creados");
        item_listado_paquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_listado_paquetesActionPerformed(evt);
            }
        });
        jMenu1.add(item_listado_paquetes);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(regresar))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(regresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 204, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigo_libroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigo_libroKeyTyped
        if (codigo_libro.getText().length() == 5)
            evt.consume();
    }//GEN-LAST:event_codigo_libroKeyTyped

    private void agregar_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_libroActionPerformed
        // Previo a agregar un libro, verifico que no exista otro en la tabla o en la Base de Datos con el mismo Código
        try {
            validar_datos_libro();
            String codigoLibro = codigo_libro.getText();
            if (!ya_existe_libro(codigoLibro, false)) {
                // Se agregará temporalmente el nuevo libro en la Tabla
                DefaultTableModel modelLibros = (DefaultTableModel)tabla_libros.getModel();
                modelLibros.addRow(new String[]{
                    ""+(modelLibros.getRowCount()+1),
                    codigoLibro,
                    nombre_libro.getText(),
                    autor_libro.getText().length()==0 ? "<Sin especificar>" : autor_libro.getText(),
                    editorial_libro.getText().length()==0 ? "<Sin especificar>" : editorial_libro.getText(),
                    estado_libro.getSelectedItem().toString()
                });
                limpiar_campos_libro()  ;// Limpio los campos
                if (!crear_paquete.isEnabled()) // Al agregar un libro ya se puede crear un paquete
                    crear_paquete.setEnabled(true);
            }
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en datos", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_agregar_libroActionPerformed

    private void tabla_librosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_librosMousePressed
        if (tabla_libros.isEnabled()) {
            editar_libro.setEnabled(true);
            eliminar_libro.setEnabled(true);
        }
    }//GEN-LAST:event_tabla_librosMousePressed

    private void editar_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar_libroActionPerformed
        // Almaceno el index del libro a editar, cargo los datos y habilito los componentes necesarios
        indexLibroEditado = tabla_libros.getSelectedRow();
        codigo_libro.setText(tabla_libros.getValueAt(indexLibroEditado, 1).toString()); // Carga de los datos del libro a editar
        nombre_libro.setText(tabla_libros.getValueAt(indexLibroEditado, 2).toString());
        autor_libro.setText("<Sin especificar>".equals(tabla_libros.getValueAt(indexLibroEditado, 3).toString()) ? "" : tabla_libros.getValueAt(indexLibroEditado, 3).toString());
        editorial_libro.setText("<Sin especificar>".equals(tabla_libros.getValueAt(indexLibroEditado, 4).toString()) ? "" : tabla_libros.getValueAt(indexLibroEditado, 4).toString());
        estado_libro.setSelectedItem(tabla_libros.getValueAt(indexLibroEditado, 5).toString());
        agregar_libro.setVisible(false);    // Muestro los botones de la edición
        aceptar_edicion_libro.setVisible(true);
        cancelar_edicion_libro.setVisible(true);
        crear_paquete.setEnabled(false);    // Inhabilito los botones de otras operaciones
        codigo_paquete.setEnabled(false);
        descripcion_paquete.setEnabled(false);
        tabla_libros.setEnabled(false);
        editar_libro.setEnabled(false);
        eliminar_libro.setEnabled(false);
    }//GEN-LAST:event_editar_libroActionPerformed

    private void aceptar_edicion_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar_edicion_libroActionPerformed
        try {
            validar_datos_libro();
            String codigoLibro = codigo_libro.getText();
            if (!ya_existe_libro(codigoLibro, true)) {
                // Se actualizará el registro temporal del libro en la Tabla
                tabla_libros.setValueAt(codigoLibro, indexLibroEditado, 1);
                tabla_libros.setValueAt(nombre_libro.getText(), indexLibroEditado, 2);
                tabla_libros.setValueAt(autor_libro.getText().length()==0 ? "<Sin especificar>" : autor_libro.getText(), indexLibroEditado, 3);
                tabla_libros.setValueAt(editorial_libro.getText().length()==0 ? "<Sin especificar>" : editorial_libro.getText(), indexLibroEditado, 4);
                tabla_libros.setValueAt(estado_libro.getSelectedItem().toString(), indexLibroEditado, 5);
                limpiar_campos_libro(); // Limpio los campos
                agregar_libro.setVisible(true);     // Oculto los botones de la edición
                aceptar_edicion_libro.setVisible(false);
                cancelar_edicion_libro.setVisible(false);
                crear_paquete.setEnabled(true);    // Habilito los botones de otras operaciones
                codigo_paquete.setEnabled(true);
                descripcion_paquete.setEnabled(true);
                tabla_libros.removeRowSelectionInterval(0, tabla_libros.getRowCount()-1);
                tabla_libros.setEnabled(true);
            }
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en datos", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_aceptar_edicion_libroActionPerformed

    private void cancelar_edicion_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_edicion_libroActionPerformed
        limpiar_campos_libro(); // Limpio los campos
        agregar_libro.setVisible(true);     // Oculto los botones de la edición
        aceptar_edicion_libro.setVisible(false);
        cancelar_edicion_libro.setVisible(false);
        crear_paquete.setEnabled(true);    // Habilito los botones de otras operaciones
        codigo_paquete.setEnabled(true);
        descripcion_paquete.setEnabled(true);
        tabla_libros.removeRowSelectionInterval(0, tabla_libros.getRowCount()-1);
        tabla_libros.setEnabled(true);
    }//GEN-LAST:event_cancelar_edicion_libroActionPerformed

    private void eliminar_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_libroActionPerformed
        int indexLibro = tabla_libros.getSelectedRow();
        eliminar_libro(indexLibro);
    }//GEN-LAST:event_eliminar_libroActionPerformed

    private void tabla_librosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_librosKeyReleased
        if (tabla_libros.isEnabled()) {
            int codigoTecla = (int)evt.getKeyChar();
            if (codigoTecla==8 || codigoTecla==127) {   // Son las teclas de Retroceso y Suprimir, respectivamente
                int indexLibro = tabla_libros.getSelectedRow();
                if (indexLibro != -1)
                    eliminar_libro(indexLibro);
            }
        }
    }//GEN-LAST:event_tabla_librosKeyReleased

    private void codigo_paqueteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigo_paqueteKeyTyped
        if (codigo_paquete.getText().length() == 5)
            evt.consume();
    }//GEN-LAST:event_codigo_paqueteKeyTyped

    private void crear_paqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_paqueteActionPerformed
        try {
            conexion.prepareStatement("START TRANSACTION");
            validar_datos_paquete();    // Verificación de que los datos sean correctos y que no se repita el Código del Paquete
            // Creación del Paquete en la Base de Datos
            conexion.prepareStatement("INSERT INTO PaqueteLibro(Codigo, Descripcion) "
                    + "VALUES('"+codigo_paquete.getText()+"', "+(descripcion_paquete.getText().length()==0 ? "NULL" : "'"+descripcion_paquete.getText()+"'")+")").executeUpdate();
            // Obtención del ID del paquete creado
            ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                    .executeQuery("SELECT LAST_INSERT_ID()");
            cConsulta.next();
            int idPaquete = cConsulta.getInt(1);
            
            // Creación de los libros pertenecientes al paquete creado
            int cantidad = tabla_libros.getRowCount();
            for(int cont=0; cont<cantidad; cont++) {
                estado_libro.setSelectedItem(tabla_libros.getValueAt(cont, 5).toString());
                conexion.prepareStatement("INSERT INTO Libro(Codigo, Nombre, Autor, Editorial, Estado, PaqueteLibro_Id) "
                        + "VALUES('"+tabla_libros.getValueAt(cont, 1).toString()+"', "
                        + "'"+tabla_libros.getValueAt(cont, 2).toString()+"', "
                        + ("<Sin especificar>".equals(tabla_libros.getValueAt(cont, 3).toString()) ? "NULL" : "'"+tabla_libros.getValueAt(cont, 3).toString()+"'")+", "
                        + ("<Sin especificar>".equals(tabla_libros.getValueAt(cont, 4).toString()) ? "NULL" : "'"+tabla_libros.getValueAt(cont, 4).toString()+"'")+", "
                        + "'"+(estado_libro.getSelectedIndex()+1)+"', "
                        + idPaquete+")").executeUpdate();
            }   // Hasta aquí se garantiza la creación del Paquete con todos los Libros que lo conforman
            JOptionPane.showMessageDialog(this, "Se ha creado el paquete exitosamente", "Crear paquete", JOptionPane.INFORMATION_MESSAGE);
            // Preparo los campos para poder crear un nuevo Paquete
            ((DefaultTableModel)tabla_libros.getModel()).setRowCount(0);
            crear_paquete.setEnabled(false);
            if (editar_libro.isEnabled()) {
                editar_libro.setEnabled(false);
                eliminar_libro.setEnabled(false);
            }
            estado_libro.setSelectedIndex(0);
            conexion.prepareStatement("COMMIT;");
        } catch (ExcepcionDatosIncorrectos ex) {
            try {
                conexion.prepareStatement("ROLLBACK;");
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en datos", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } catch (SQLException ex) {
            try {
                conexion.prepareStatement("ROLLBACK,");
                JOptionPane.showMessageDialog(this, "No se puede crear alguno de los registros del nuevo paquete.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex1) {
                Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }//GEN-LAST:event_crear_paqueteActionPerformed

    private void item_listado_librosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_listado_librosActionPerformed
        VerListadoLibros verLibros = new VerListadoLibros(this, conexion);
        verLibros.setVisible(verLibros.getHacerVisible());
    }//GEN-LAST:event_item_listado_librosActionPerformed

    private void item_listado_paquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_listado_paquetesActionPerformed
        VerListadoPaquetes verPaquetes = new VerListadoPaquetes(this, conexion);
        verPaquetes.setVisible(verPaquetes.getHacerVisible());
    }//GEN-LAST:event_item_listado_paquetesActionPerformed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        int opcion = JOptionPane.YES_OPTION;
        if (tabla_libros.getRowCount() != 0)
            opcion = JOptionPane.showOptionDialog(this, "Aún no ha creado el Paquete de Libros, por lo\nque se perderá los datos de los libros agregados.\n\nDesea continuar?", "Crear paquete", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (opcion == JOptionPane.YES_OPTION) {
            ventanaPadre.setEnabled(true);
            this.dispose();
        }
    }//GEN-LAST:event_regresarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int opcion = JOptionPane.YES_OPTION;
        if (tabla_libros.getRowCount() != 0)
            opcion = JOptionPane.showOptionDialog(this, "Aún no ha creado el Paquete de Libros, por lo\nque se perderá los datos de los libros agregados.\n\nDesea continuar?", "Crear paquete", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (opcion == JOptionPane.YES_OPTION) {
            ventanaPadre.setEnabled(true);
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        } else
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void validar_datos_libro() throws ExcepcionDatosIncorrectos {
        if (codigo_libro.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("No ha especificado el Código del Libro");
        if (codigo_libro.getText().length() != 5)
            throw new ExcepcionDatosIncorrectos("El Código del Libro debe tener 5 caracteres");
        if (nombre_libro.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("No ha especificado el Nombre del Libro");
        // Los otros campos no son obligatorios
    }
    private void limpiar_campos_libro() {
        codigo_libro.setText("");
        nombre_libro.setText("");
        autor_libro.setText("");
        editorial_libro.setText("");
        estado_libro.setSelectedIndex(0);
    }
    private void eliminar_libro(int indexLibro) {
        // Actualizo el No. de los registros que preceden al que se eliminará
        int cantidad = tabla_libros.getRowCount();
        for(int fil=indexLibro+1; fil<cantidad; fil++)
            tabla_libros.setValueAt(""+fil, fil, 0);
        ((DefaultTableModel)tabla_libros.getModel()).removeRow(indexLibro);   // Eliminación del registro de la Tabla
        editar_libro.setEnabled(false);     // Al eliminar un registro, no hay nada seleccionado
        eliminar_libro.setEnabled(false);
        if (tabla_libros.getRowCount() == 0)
            crear_paquete.setEnabled(false);    // Un paquete puede crearse sí y sólo sí tiene por lo menos un libro
    }
    private boolean ya_existe_libro(String codigoLibro, boolean buscarEnEdicion) {
        // Verificación en la Tabla de Libros agregados
        int cantidad = tabla_libros.getRowCount(), cont;
        for(cont=0; cont<cantidad; cont++) {
            if (buscarEnEdicion && cont==indexLibroEditado)
                cont++; // Al editar un libro, posiblemente no se le cambie el código por lo que no debo compararlo
            else if (codigoLibro.equals(tabla_libros.getValueAt(cont, 1).toString()))
                break;
        }
        if (cont < cantidad) { // Se encontró un libro con el mismo código en la Tabla
            JOptionPane.showMessageDialog(this, "El Libro No. "+(cont+1)+" de la tabla tiene el mismo Código", "Datos repetidos", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        try {
            // Verificación en la Base de Datos
            ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                    .executeQuery("SELECT Nombre, Autor, Editorial FROM Libro WHERE Codigo = '"+codigoLibro+"'");
            if (cConsulta.next()) {
                JOptionPane.showMessageDialog(this, "Ya se registró un Libro con el mismo Código:"
                        + "\nCódigo:     "+codigoLibro
                        + "\nNombre:     "+cConsulta.getString("Nombre")
                        + "\nAutor:      "+(cConsulta.getString("Autor")==null ? "<No especificado>" : cConsulta.getString("Autor"))
                        + "\nEditorial:  "+(cConsulta.getString("Editorial")==null ? "<No especificado>" : cConsulta.getString("Editorial"))
                        + "\n\nNo se puede agregar el nuevo libro.", "Datos repetidos", JOptionPane.ERROR_MESSAGE);
                return true;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al comprobar existencia del Libro.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex);
            return true;    // Si ocurre un error, se asume que posiblemente ya exista el libro
        }
        return false;
    }
    private void validar_datos_paquete() throws ExcepcionDatosIncorrectos {
        if (codigo_paquete.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("No ha especificado el Código del Paquete");
        // La Descripción no es necesaria
        // Verificación de que aún no exista un paquete con el mismo Código
        try {
            String codigoPaquete = codigo_paquete.getText();
            ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                    .executeQuery("SELECT Descripcion FROM PaqueteLibro WHERE Codigo = '"+codigoPaquete+"'");
            if (cConsulta.next())
                throw new ExcepcionDatosIncorrectos("Ya existe un Paquete con el mismo Código:"
                        + "\nCódigo:         "+codigoPaquete
                        + "\nDescripción:  "+(cConsulta.getString(1)==null ? "<No especificado>" : cConsulta.getString(1))
                        + "\n\nNo se puede agregar el nuevo Paquete.");
        } catch (SQLException ex) {
            Logger.getLogger(CrearPaqueteLibro.class.getName()).log(Level.SEVERE, null, ex);
            throw new ExcepcionDatosIncorrectos("Error al comprobar existencia del Paquete.\n\nDescripción:\n"+ex.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearPaqueteLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearPaqueteLibro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar_edicion_libro;
    private javax.swing.JButton agregar_libro;
    private javax.swing.JTextField autor_libro;
    private javax.swing.JButton cancelar_edicion_libro;
    private javax.swing.JTextField codigo_libro;
    private javax.swing.JTextField codigo_paquete;
    private javax.swing.JButton crear_paquete;
    private javax.swing.JTextArea descripcion_paquete;
    private javax.swing.JButton editar_libro;
    private javax.swing.JTextField editorial_libro;
    private javax.swing.JButton eliminar_libro;
    private javax.swing.JComboBox<String> estado_libro;
    private javax.swing.JMenuItem item_listado_libros;
    private javax.swing.JMenuItem item_listado_paquetes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombre_libro;
    private javax.swing.JButton regresar;
    private javax.swing.JTable tabla_libros;
    // End of variables declaration//GEN-END:variables
}
