/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Estudiante;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Wilson Xicará
 */
public class EditarDatosEstudiante extends javax.swing.JDialog {
    private Connection conexion;
    private int idEstudiante, idEncargado;
    private ArrayList<Integer> listaIDMunicipios;
    /**
     * Creates new form EditarDatosEstudiante
     */
    public EditarDatosEstudiante(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public EditarDatosEstudiante(java.awt.Frame parent, Connection conexion, int idEstudiante) {
        super(parent, true);
        initComponents();
        this.conexion = conexion;
        this.idEstudiante = idEstudiante;
        
        // Obtengo los datos del Estudiante desde la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            // Obtengo todos los Municipios
            ResultSet cConsulta = sentencia.executeQuery("SELECT * FROM Municipio");
            listaIDMunicipios = new ArrayList<>();
            while(cConsulta.next()) {
                listaIDMunicipios.add(cConsulta.getInt("Id"));
                municipio.addItem(cConsulta.getString("Nombre"));
            }
            // Obtención de los datos actuales del Estudiante
            cConsulta = sentencia.executeQuery("SELECT Estudiante.CodigoPersonal, Estudiante.CUI, Estudiante.Nombres, Estudiante.Apellidos, Estudiante.Direccion, Municipio.Nombre Municipio, Estudiante.FechaNacimiento, Estudiante.Sexo, Estudiante.Etnia, Estudiante.CapacidadDiferente, Estudiante.TipoCapacidad, Estudiante.Encargado_Id, CONCAT(Encargado.Nombres, ' ', Encargado.Apellidos) Encargado, Estudiante.RelacionEncargado FROM Estudiante "
                    + "INNER JOIN Municipio ON Estudiante.Municipio_Id = Municipio.Id "
                    + "INNER JOIN Encargado ON Estudiante.Encargado_Id = Encargado.Id "
                    + "WHERE Estudiante.Id = "+idEstudiante);
            cConsulta.next();
            codigo_personal.setText(cConsulta.getString("CodigoPersonal"));
            cui.setText(cConsulta.getString("CUI"));
            nombres.setText(cConsulta.getString("Nombres"));
            apellidos.setText(cConsulta.getString("Apellidos"));
            direccion.setText(cConsulta.getString("Direccion"));
            municipio.setSelectedItem(cConsulta.getString("Municipio"));
            String[] fecha = cConsulta.getString("FechaNacimiento").split("-");
            fecha_nacimiento.setDate(new Date(Integer.parseInt(fecha[0])-1900, Integer.parseInt(fecha[1])-1, Integer.parseInt(fecha[2])));
            sexo_masculino.setSelected("M".equals(cConsulta.getString("Sexo")));
            etnia.setText(cConsulta.getString("Etnia"));
            capacidad_diferente.setSelected(cConsulta.getBoolean("CapacidadDiferente"));
            tipo_capacidad.setText(capacidad_diferente.isSelected() ? cConsulta.getString("TipoCapacidad") : "Sin especificar");
            idEncargado = cConsulta.getInt("Encargado_Id");
            encargado_nombre_completo.setText(cConsulta.getString("Encargado"));
            encargado_relacion.setText(cConsulta.getString("RelacionEncargado"));
            // Otras configuraciones importantes
            fecha_nacimiento.getJCalendar().setWeekOfYearVisible(false);  // Para no mostrar el número de semana en el Calendario
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
        } catch (SQLException ex) {
            Logger.getLogger(EditarDatosEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        codigo_personal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cui = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        apellidos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        municipio = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        fecha_nacimiento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        sexo_masculino = new javax.swing.JRadioButton();
        sexo_femenino = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        etnia = new javax.swing.JTextField();
        capacidad_diferente = new javax.swing.JRadioButton();
        tipo_capacidad = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        cambiar_encargado = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        encargado_nombre_completo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        encargado_relacion = new javax.swing.JTextField();
        editar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar información de Estudiante");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Información del(la) Estudiante", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Código Personal:");

        codigo_personal.setEditable(false);
        codigo_personal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("CUI:");

        cui.setEditable(false);
        cui.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombres:");

        nombres.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Apellidos:");

        apellidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Dirección:");

        direccion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Municipio:");

        municipio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Fecha de Nacimiento:");

        fecha_nacimiento.setDateFormatString("dd/MM/yyyy");
        fecha_nacimiento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Sexo:");

        sexo_masculino.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sexo_masculino.setSelected(true);
        sexo_masculino.setText("Masculino");
        sexo_masculino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sexo_masculinoItemStateChanged(evt);
            }
        });

        sexo_femenino.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sexo_femenino.setText("Femenino");
        sexo_femenino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sexo_femeninoItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Etnia:");

        etnia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        capacidad_diferente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        capacidad_diferente.setText("Capacidad diferente:");
        capacidad_diferente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                capacidad_diferenteItemStateChanged(evt);
            }
        });

        tipo_capacidad.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tipo_capacidad.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(capacidad_diferente)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etnia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sexo_masculino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sexo_femenino))
                    .addComponent(tipo_capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigo_personal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cui, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(apellidos, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(nombres, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(codigo_personal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(fecha_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sexo_masculino)
                    .addComponent(sexo_femenino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etnia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capacidad_diferente)
                    .addComponent(tipo_capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Información del Encargado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        cambiar_encargado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cambiar_encargado.setText("Cambiar Encargado");
        cambiar_encargado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiar_encargadoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Nombre completo:");

        encargado_nombre_completo.setEditable(false);
        encargado_nombre_completo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Relación con el Estudiante:");

        encargado_relacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cambiar_encargado)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(encargado_nombre_completo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encargado_relacion, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cambiar_encargado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(encargado_nombre_completo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(encargado_relacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        editar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar(16x16).png"))); // NOI18N
        editar.setText("Guardar cambios");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar(16x16).png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Los campos en negrita no pueden ser editados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar)
                .addGap(122, 122, 122))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editar)
                    .addComponent(cancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sexo_masculinoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sexo_masculinoItemStateChanged
        sexo_femenino.setSelected(!sexo_masculino.isSelected());
    }//GEN-LAST:event_sexo_masculinoItemStateChanged

    private void sexo_femeninoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sexo_femeninoItemStateChanged
        sexo_masculino.setSelected(!sexo_femenino.isSelected());
    }//GEN-LAST:event_sexo_femeninoItemStateChanged

    private void capacidad_diferenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_capacidad_diferenteItemStateChanged
        tipo_capacidad.setText(capacidad_diferente.isSelected() ? "" : "Sin especificar");
        tipo_capacidad.setEnabled(capacidad_diferente.isSelected());
    }//GEN-LAST:event_capacidad_diferenteItemStateChanged

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        try {
            validar_datos();
            // Actualización de la información del Estudiante
            Calendar fechaNac = fecha_nacimiento.getCalendar();
            String instruccion = "UPDATE Estudiante SET"
                    + " Nombres = '"+nombres.getText()+"',"
                    + " Apellidos = '"+apellidos.getText()+"',"
                    + " Direccion = '"+direccion.getText()+"',"
                    + " FechaNacimiento = '"+fechaNac.get(Calendar.YEAR)+"-"+(fechaNac.get(Calendar.MONTH)+1)+"-"+fechaNac.get(Calendar.DAY_OF_MONTH)+"', "
                    + " Sexo = '"+(sexo_masculino.isSelected() ? "M" : "F")+"',"
                    + " Etnia = '"+etnia.getText()+"',"
                    + " CapacidadDiferente = "+capacidad_diferente.isSelected()+","
                    + " TipoCapacidad = "+(capacidad_diferente.isSelected() ? "'"+tipo_capacidad.getText()+"'" : "NULL")+","
                    + " Municipio_Id = "+listaIDMunicipios.get(municipio.getSelectedIndex())+","
                    + " Encargado_Id = "+idEncargado+","
                    + " RelacionEncargado = '"+encargado_relacion.getText()+"'"
                    + " WHERE Id ="+idEstudiante;
            conexion.prepareStatement(instruccion).executeUpdate(); // Actualizo el registro
            JOptionPane.showMessageDialog(this, "Cambios guardados con éxito", "Registro editado", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en datos", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(EditarDatosEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se puede actualizar el registro.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(EditarDatosEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void cambiar_encargadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiar_encargadoActionPerformed
        // Agrego en un ArrayList<String> el listado de municipios que se muestran, para evitar volver a hacer la consulta
        CrearEncargado crear = new CrearEncargado(null, conexion, direccion.getText(), municipio.getSelectedIndex(), new ArrayList<>());
        JOptionPane.showMessageDialog(this, "En la siguiente ventana:\n\nSi asignará un Encargado ya existente, busque y seleccione dicho encargado.", "Información", JOptionPane.INFORMATION_MESSAGE);
        crear.setVisible(crear.getHacerVisible());
        int idEncargadoNuevo = crear.getIdEncargadoSeleccionado();
        if (idEncargadoNuevo != -1) {
            idEncargado = idEncargadoNuevo;
            encargado_nombre_completo.setText(crear.getNombreEncargadoSeleccionado());
            encargado_relacion.setText("");
        }
    }//GEN-LAST:event_cambiar_encargadoActionPerformed

    private void validar_datos() throws ExcepcionDatosIncorrectos {
        if (nombres.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("Los Nombres del Estudiante no pueden ser nulos");
        if (apellidos.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("Los Apellidos del Estudiante no pueden ser nulos");
        if (direccion.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("La Dirección del Estudiante no puede ser nula");
        // Inicialmente habrá un municipio seleccionado
        if (fecha_nacimiento.getDate() == null)
            throw new ExcepcionDatosIncorrectos("No se ha especificado la fecha de nacimiento del estudiante");
        if (etnia.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("No se ha especificado la comunidad étnica del estudiante");
        if (capacidad_diferente.isSelected() && tipo_capacidad.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("No se ha especificado el tipo de capacidad diferente del estudiante");
        // Inicialmente ya se tiene asignado un encargado, y sólo un Encargado existente puede sobreescribir el idEncargado
        if (encargado_relacion.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("No se ha especificado la relación entre el Estudiante y su Encargado");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEstudiante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditarDatosEstudiante dialog = new EditarDatosEstudiante(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidos;
    private javax.swing.JButton cambiar_encargado;
    private javax.swing.JButton cancelar;
    private javax.swing.JRadioButton capacidad_diferente;
    private javax.swing.JTextField codigo_personal;
    private javax.swing.JTextField cui;
    private javax.swing.JTextField direccion;
    private javax.swing.JButton editar;
    private javax.swing.JTextField encargado_nombre_completo;
    private javax.swing.JTextField encargado_relacion;
    private javax.swing.JTextField etnia;
    private com.toedter.calendar.JDateChooser fecha_nacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> municipio;
    private javax.swing.JTextField nombres;
    private javax.swing.JRadioButton sexo_femenino;
    private javax.swing.JRadioButton sexo_masculino;
    private javax.swing.JTextField tipo_capacidad;
    // End of variables declaration//GEN-END:variables
}
