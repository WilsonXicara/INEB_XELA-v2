/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Estudiante;

import Bitacora.Transaccion;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Wilson Xicará
 */
public class EditarDatosEncargado extends javax.swing.JDialog {
    private Connection conexion;
    private int idEncargado, idTelefono, idCelular;
    private ArrayList<Integer> listaIDMunicipios;
    private Transaccion bitacora;
    /**
     * Creates new form EditarDatosEncargado
     */
    public EditarDatosEncargado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public EditarDatosEncargado(java.awt.Frame parent, Connection conexion, int idEstudianteRelacionado) {
        super(parent, true);
        initComponents();
        this.conexion = conexion;
        idTelefono = idCelular = -1;
        
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            // Obtención de todos los Municipios
            ResultSet cConsulta = sentencia.executeQuery("SELECT * FROM Municipio");
            listaIDMunicipios = new ArrayList<>();
            while(cConsulta.next()) {
                listaIDMunicipios.add(cConsulta.getInt("Id"));
                municipio.addItem(cConsulta.getString("Nombre"));
            }
            // Obtención de los datos actuales del Encargado
            cConsulta = sentencia.executeQuery("SELECT Encargado.Id, Encargado.DPI, Encargado.Nombres, Encargado.Apellidos, Encargado.Direccion, Municipio.Nombre Municipio, Encargado.FechaNacimiento, Encargado.Trabajo FROM Encargado "
                    + "INNER JOIN Estudiante ON Encargado.Id = Estudiante.Encargado_Id "
                    + "INNER JOIN Municipio ON Encargado.Municipio_Id = Municipio.Id "
                    + "WHERE Estudiante.Id = "+idEstudianteRelacionado);
            cConsulta.next();
            idEncargado = cConsulta.getInt("Id");
            dpi.setText(cConsulta.getString("DPI"));
            nombres.setText(cConsulta.getString("Nombres"));
            apellidos.setText(cConsulta.getString("Apellidos"));
            direccion.setText(cConsulta.getString("Direccion"));
            municipio.setSelectedItem(cConsulta.getString("Municipio"));
            String[] fecha = cConsulta.getString("FechaNacimiento").split("-");
            fecha_nacimiento.setDate(new Date(Integer.parseInt(fecha[0])-1900, Integer.parseInt(fecha[1])-1, Integer.parseInt(fecha[2])));
            trabajo.setText(cConsulta.getString("Trabajo"));
            // Obtención de los números de teléfono y celular
            cConsulta = sentencia.executeQuery("SELECT Id, Telefono FROM Telefono WHERE Encargado_Id = "+idEstudianteRelacionado);
            if (cConsulta.next()) {
                idTelefono = cConsulta.getInt("Id");
                telefono.setText(cConsulta.getString("Telefono"));
            } if (cConsulta.next()) {
                idCelular = cConsulta.getInt("Id");
                celular.setText(cConsulta.getString("Telefono"));
            }
            // Otras configuraciones importantes
            bitacora = new Transaccion(conexion);
            fecha_nacimiento.getJCalendar().setWeekOfYearVisible(false);  // Para no mostrar el número de semana en el Calendario
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
        } catch (SQLException ex) {
            Logger.getLogger(EditarDatosEncargado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dpi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nombres = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        apellidos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        municipio = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        fecha_nacimiento = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        telefono = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        celular = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        trabajo = new javax.swing.JTextField();
        editar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("DPI:");

        dpi.setEditable(false);
        dpi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nombres:");

        nombres.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Apellidos:");

        apellidos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Dirección:");

        direccion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Municipio:");

        municipio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Fecha de Nacimiento:");

        fecha_nacimiento.setDateFormatString("dd/MM/yyyy");
        fecha_nacimiento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Teléfono:");

        telefono.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telefonoKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Celular:");

        celular.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        celular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                celularKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Trabajo u oficio:");

        trabajo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        editar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar(16x16).png"))); // NOI18N
        editar.setText("Guardar cambios");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar(16x16).png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Los campos en negrita no pueden ser editados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(celular, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trabajo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(fecha_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(celular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(trabajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editar)
                    .addComponent(cancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefonoKeyTyped
        // Se acepta la tecla si es un dígito y si hay menos de 8 dígitos en el Número de Teléfono
        if (!Pattern.compile("\\d").matcher(String.valueOf(evt.getKeyChar())).matches() || telefono.getText().length() == 8)
            evt.consume();
    }//GEN-LAST:event_telefonoKeyTyped

    private void celularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularKeyTyped
        // Se acepta la tecla si es un dígito y si hay menos de 8 dígitos en el Número de Teléfono
        if (!Pattern.compile("\\d").matcher(String.valueOf(evt.getKeyChar())).matches() || celular.getText().length() == 8)
            evt.consume();
    }//GEN-LAST:event_celularKeyTyped

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        try {
            validar_datos();
            // Actualización de la información del Encargado
            conexion.prepareStatement("START TRANSACTION").executeUpdate(); // Inicio de la Transacción y la Bitácora
            bitacora.iniciar();
            Calendar fechaNac = fecha_nacimiento.getCalendar();
            String instruccion = "UPDATE Encargado SET"
            + " Nombres = '"+nombres.getText()+"', "
            + " Apellidos = '"+apellidos.getText()+"', "
            + " Direccion = '"+direccion.getText()+"', "
            + " FechaNacimiento = '"+fechaNac.get(Calendar.YEAR)+"-"+(fechaNac.get(Calendar.MONTH)+1)+"-"+fechaNac.get(Calendar.DAY_OF_MONTH)+"', "
            + " Municipio_Id = "+listaIDMunicipios.get(municipio.getSelectedIndex())+", "
            + " Trabajo = '"+trabajo.getText()+"'"
            + " WHERE Id ="+idEncargado;
            bitacora.almacenarSentenciaSQL(instruccion);
            conexion.prepareStatement(instruccion).executeUpdate(); // Actualizo el registro
            // Creación o actualización de los números de teléfono y celular
            if (telefono.getText().length()==0 && idTelefono!=-1) {
                instruccion = "DELETE FROM Telefono WHERE Id = "+idTelefono;
                bitacora.almacenarSentenciaSQL(instruccion);
                conexion.prepareStatement(instruccion).executeUpdate();
            }
            else if (telefono.getText().length() != 0) {
                instruccion = (idTelefono==-1) ?
                        "INSERT INTO Telefono(Telefono, Encargado_Id) VALUES('"+telefono.getText()+"', "+idEncargado+")":
                        "UPDATE Telefono SET Telefono = '"+telefono.getText()+"' WHERE Id = "+idTelefono+" AND Encargado_Id = "+idEncargado;
                bitacora.almacenarSentenciaSQL(instruccion);
                conexion.prepareStatement(instruccion).executeUpdate();
            }
            if (celular.getText().length()==0 && idCelular!=-1) {
                instruccion = "DELETE FROM Telefono WHERE Id = "+idCelular;
                bitacora.almacenarSentenciaSQL(instruccion);
                conexion.prepareStatement(instruccion).executeUpdate();
            }
            else if (celular.getText().length() != 0) {
                instruccion = (idCelular==-1) ?
                        "INSERT INTO Telefono(Telefono, Encargado_Id) VALUES('"+celular.getText()+"', "+idEncargado+")":
                        "UPDATE Telefono SET Telefono = '"+celular.getText()+"' WHERE Id = "+idCelular+" AND Encargado_Id = "+idEncargado;
                bitacora.almacenarSentenciaSQL(instruccion);
                conexion.prepareStatement(instruccion).executeUpdate();
            }
            conexion.prepareStatement("COMMIT").executeUpdate();    // Transacción finalizada con éxito
            bitacora.finalizar(Transaccion.COMPROMETIDA);
            JOptionPane.showMessageDialog(this, "Cambios guardados con éxito", "Registro editado", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en datos", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(EditarDatosEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            try {
                conexion.prepareStatement("ROLLBACK").executeUpdate();
                bitacora.finalizar(Transaccion.ABORTADA);
            } catch (SQLException ex1) {
                bitacora.finalizar(Transaccion.FALLIDA);
                Logger.getLogger(EditarDatosEncargado.class.getName()).log(Level.SEVERE, null, ex1);
            }
            JOptionPane.showMessageDialog(this, "No se puede actualizar el registro.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(EditarDatosEstudiante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void validar_datos() throws ExcepcionDatosIncorrectos {
        if (nombres.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("Los Nombres del Estudiante no pueden ser nulos");
        if (apellidos.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("Los Apellidos del Estudiante no pueden ser nulos");
        if (direccion.getText().length() == 0)
            throw new ExcepcionDatosIncorrectos("La Dirección del Estudiante no puede ser nula");
        // Inicialmente habrá un municipio seleccionado
        if (fecha_nacimiento.getDate() == null)
            throw new ExcepcionDatosIncorrectos("No se ha especificado la fecha de nacimiento del estudiante");
        if (telefono.getText().length()!=0 && telefono.getText().length()!=8)
            throw new ExcepcionDatosIncorrectos("El número de teléfono debe ser de 8 dígitos");
        if (celular.getText().length()!=0 && celular.getText().length()!=8)
            throw new ExcepcionDatosIncorrectos("El número de celular debe ser de 8 dígitos");
        // El Trabajo no es campo obligatorio
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEncargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEncargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEncargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarDatosEncargado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditarDatosEncargado dialog = new EditarDatosEncargado(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidos;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField celular;
    private javax.swing.JTextField direccion;
    private javax.swing.JTextField dpi;
    private javax.swing.JButton editar;
    private com.toedter.calendar.JDateChooser fecha_nacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> municipio;
    private javax.swing.JTextField nombres;
    private javax.swing.JTextField telefono;
    private javax.swing.JTextField trabajo;
    // End of variables declaration//GEN-END:variables
}
