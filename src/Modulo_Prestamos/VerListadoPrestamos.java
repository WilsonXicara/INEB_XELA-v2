/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Prestamos;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Wilson Xicará
 */
public class VerListadoPrestamos extends javax.swing.JFrame {
    private Connection conexion;
    private JFrame ventanaPadre;
    private boolean hacerVisible, ciclosCargados;
    private ArrayList<Integer> listaIDCiclos, listaIDPrestamos;
    private ArrayList<Boolean> listaCicloListo, listaCicloCerrado;
    private TableRowSorter filtroTabla;
    private int indexPrestamo;
    private Date fechaActual;
    /**
     * Creates new form VerPrestamos
     */
    public VerListadoPrestamos() {
        initComponents();
    }
    public VerListadoPrestamos(Connection conexion, JFrame ventanaPadre) {
        initComponents();
        this.conexion = conexion;
        this.ventanaPadre = ventanaPadre;
        hacerVisible = !(ciclosCargados = false);
        
        // Obtención de algunos datos desde la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cConsulta;
            // Obtención de todos los Ciclos Escolares
            cConsulta = sentencia.executeQuery("SELECT Id, Anio, Listo, Cerrado FROM CicloEscolar");
            listaIDCiclos = new ArrayList<>();
            listaCicloListo = new ArrayList<>();
            listaCicloCerrado = new ArrayList<>();
            while(cConsulta.next()) {
                listaIDCiclos.add(cConsulta.getInt("Id"));
                listaCicloListo.add(cConsulta.getBoolean("Listo"));
                listaCicloCerrado.add(cConsulta.getBoolean("Cerrado"));
                ciclo_escolar.addItem(cConsulta.getString("Anio"));
            } ciclosCargados = true;
            if (listaIDCiclos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Aún no se han creado Ciclos Escolares,\npor lo que no existen Préstamos.", "Datos faltantes", JOptionPane.ERROR_MESSAGE);
                ventanaPadre.setEnabled(!(hacerVisible = false));
                return;
            }
            listaIDPrestamos = new ArrayList<>();
            filtroTabla = new TableRowSorter(tabla_prestamos.getModel()); // Objeto que permite filtrar filas de la Tabla
            ciclo_escolar.setSelectedIndex(-1);
            ciclo_escolar.setSelectedIndex(ciclo_escolar.getItemCount()-1);
            // Obtención de la Fecha Actual
            cConsulta = sentencia.executeQuery("SELECT NOW()");
            cConsulta.next();
            fechaActual = cConsulta.getDate(1);
            // Otras configuraciones importantes
            tabla_prestamos.setShowHorizontalLines(true);  // Para mostrar los bordes de las celdas de la tabla
            tabla_prestamos.setShowVerticalLines(true);
            tabla_detalle_prestamo.setShowHorizontalLines(true);  // Para mostrar los bordes de las celdas de la tabla
            tabla_detalle_prestamo.setShowVerticalLines(true);
            fecha_anulacion.setDate(fechaActual);
            fecha_anulacion.getJCalendar().setWeekOfYearVisible(false);  // Para no mostrar el número de semana en el Calendario
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
        } catch (SQLException ex) {
            hacerVisible = false;
            JOptionPane.showMessageDialog(this, "No se puede extraer alguno de los registros.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(VerListadoPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ciclo_escolar = new javax.swing.JComboBox<>();
        panel_listado_prestamos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_prestamos = new javax.swing.JTable();
        anular_prestamo_seleccionado = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        filtrar_por = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        valor_a_filtrar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_detalle_prestamo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        motivo_prestamo_anulado = new javax.swing.JTextArea();
        panel_anular_prestamo_seleccionado = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        numero_prestamo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fecha_anulacion = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        motivo_anulacion_seleccionado = new javax.swing.JTextArea();
        anular_prestamo = new javax.swing.JButton();
        cancelar_anulacion = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de Préstamos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Ciclo Escolar:");

        ciclo_escolar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ciclo_escolarItemStateChanged(evt);
            }
        });

        panel_listado_prestamos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Préstamos del Ciclo Escolar _ciclo: _cantidad préstamo(s)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tabla_prestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Vigente", "Código del Paquete", "Estudiante", "Grado y Sección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_prestamos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_prestamos.getTableHeader().setReorderingAllowed(false);
        tabla_prestamos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_prestamosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_prestamos);

        anular_prestamo_seleccionado.setText("Anular Préstamo");
        anular_prestamo_seleccionado.setEnabled(false);
        anular_prestamo_seleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anular_prestamo_seleccionadoActionPerformed(evt);
            }
        });

        jLabel6.setText("Filtrar por:");

        filtrar_por.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vigente", "Código de Paquete", "Estudiante", "Grado y Sección" }));

        jLabel7.setText("Valor:");

        valor_a_filtrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valor_a_filtrarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panel_listado_prestamosLayout = new javax.swing.GroupLayout(panel_listado_prestamos);
        panel_listado_prestamos.setLayout(panel_listado_prestamosLayout);
        panel_listado_prestamosLayout.setHorizontalGroup(
            panel_listado_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_listado_prestamosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(anular_prestamo_seleccionado))
            .addGroup(panel_listado_prestamosLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filtrar_por, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valor_a_filtrar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_listado_prestamosLayout.setVerticalGroup(
            panel_listado_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_listado_prestamosLayout.createSequentialGroup()
                .addGroup(panel_listado_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(filtrar_por, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(valor_a_filtrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anular_prestamo_seleccionado))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle del Préstamo"));

        tabla_detalle_prestamo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Código de Boleta:", null},
                {"Fecha de Pago:", null},
                {"Monto:", null},
                {"Anulado:", null},
                {"Fecha anulación:", null}
            },
            new String [] {
                "Campo", "Información"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_detalle_prestamo.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tabla_detalle_prestamo);

        jLabel2.setText("Motivo de anulación:");

        motivo_prestamo_anulado.setEditable(false);
        motivo_prestamo_anulado.setColumns(20);
        motivo_prestamo_anulado.setRows(5);
        jScrollPane2.setViewportView(motivo_prestamo_anulado);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel2)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panel_anular_prestamo_seleccionado.setBorder(javax.swing.BorderFactory.createTitledBorder("Anulación de Préstamo:"));

        jLabel3.setText("Préstamo No.:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Fecha anulación:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Motivo:");

        motivo_anulacion_seleccionado.setColumns(20);
        motivo_anulacion_seleccionado.setRows(5);
        jScrollPane3.setViewportView(motivo_anulacion_seleccionado);

        anular_prestamo.setText("Anular");
        anular_prestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anular_prestamoActionPerformed(evt);
            }
        });

        cancelar_anulacion.setText("Cancelar");
        cancelar_anulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_anulacionActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Los campos en negrita son obligatorios");

        javax.swing.GroupLayout panel_anular_prestamo_seleccionadoLayout = new javax.swing.GroupLayout(panel_anular_prestamo_seleccionado);
        panel_anular_prestamo_seleccionado.setLayout(panel_anular_prestamo_seleccionadoLayout);
        panel_anular_prestamo_seleccionadoLayout.setHorizontalGroup(
            panel_anular_prestamo_seleccionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_anular_prestamo_seleccionadoLayout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numero_prestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panel_anular_prestamo_seleccionadoLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addComponent(fecha_anulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel5)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(panel_anular_prestamo_seleccionadoLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(anular_prestamo)
                .addGap(7, 7, 7)
                .addComponent(cancelar_anulacion))
            .addComponent(jLabel8)
        );
        panel_anular_prestamo_seleccionadoLayout.setVerticalGroup(
            panel_anular_prestamo_seleccionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_anular_prestamo_seleccionadoLayout.createSequentialGroup()
                .addGroup(panel_anular_prestamo_seleccionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_anular_prestamo_seleccionadoLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(numero_prestamo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(panel_anular_prestamo_seleccionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_anular_prestamo_seleccionadoLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addComponent(fecha_anulacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jLabel5)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(panel_anular_prestamo_seleccionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(anular_prestamo)
                    .addComponent(cancelar_anulacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8))
        );

        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_listado_prestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel_anular_prestamo_seleccionado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ciclo_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(regresar))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ciclo_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_listado_prestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_anular_prestamo_seleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ciclo_escolarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ciclo_escolarItemStateChanged
        int indexCiclo = ciclo_escolar.getSelectedIndex();
        if (ciclosCargados && evt.getStateChange()==ItemEvent.SELECTED && indexCiclo!=-1) {
            filtrar_por.setSelectedIndex(0);    // Eliminación del último filtro seleccionado
            valor_a_filtrar.setText("");
            filtroTabla.setRowFilter(RowFilter.regexFilter(""));
            tabla_prestamos.setRowSorter(filtroTabla);
            limpiar_detalle_prestamo_seleccionado();
            panel_anular_prestamo_seleccionado.setVisible(false);
            
            // Se obtiene el listado de Préstamos del Ciclo Escolar seleccionado
            listaIDPrestamos.clear();
            try {   // Obtención de todos los Préstamos de Paquetes de Libros realizados en el Ciclo Escolar seleccionado
                ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                        .executeQuery("SELECT Prestamo.Id idPrestamo, Prestamo.Anulado, PaqueteLibro.Codigo codigoPaquete, CONCAT(Estudiante.Nombres, ' ', Estudiante.Apellidos) nombreEstudiante, CONCAT(Grado.Nombre, ' ', Grado.Seccion) gradoSeccion FROM Prestamo "
                        + "INNER JOIN PaqueteLibro ON Prestamo.PaqueteLibro_Id = PaqueteLibro.Id "
                        + "INNER JOIN AsignacionEST ON Prestamo.AsignacionEST_Id = AsignacionEST.Id "
                        + "INNER JOIN Estudiante ON AsignacionEST.Estudiante_Id = Estudiante.Id "
                        + "INNER JOIN Grado ON AsignacionEST.Grado_Id = Grado.Id "
                        + "WHERE AsignacionEST.CicloEscolar_Id = "+listaIDCiclos.get(indexCiclo));
                DefaultTableModel modelPrestamos = (DefaultTableModel)tabla_prestamos.getModel();
                modelPrestamos.setRowCount(0);
                int contador = 0;
                while(cConsulta.next()) {
                    listaIDPrestamos.add(cConsulta.getInt("idPrestamo"));
                    modelPrestamos.addRow(new String[]{
                        ""+(++contador),
                        cConsulta.getBoolean("Anulado") ? "Si" : "No",
                        cConsulta.getString("codigoPaquete"),
                        cConsulta.getString("nombreEstudiante"),
                        cConsulta.getString("gradoSeccion")
                    });
                }
                panel_listado_prestamos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Préstamos del Ciclo Escolar "+ciclo_escolar.getSelectedItem().toString()+": "+contador+" préstamo"+(contador==1?"":"s"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "No se puede obtener el listado de Préstamos del Ciclo Escolar "+ciclo_escolar.getSelectedItem().toString()+".\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(VerListadoPrestamos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ciclo_escolarItemStateChanged

    private void valor_a_filtrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valor_a_filtrarKeyReleased
        String valor = valor_a_filtrar.getText();
        if (valor.length() != 0) {
            filtroTabla.setRowFilter(RowFilter.regexFilter(valor_a_filtrar.getText(), filtrar_por.getSelectedIndex()+1));
            tabla_prestamos.setRowSorter(filtroTabla);
            if (anular_prestamo_seleccionado.isEnabled()) {  // Al filtrar las filas, se pierde la última fila seleccionada
                anular_prestamo_seleccionado.setEnabled(false);
                limpiar_detalle_prestamo_seleccionado();
            }
        }
    }//GEN-LAST:event_valor_a_filtrarKeyReleased

    private void tabla_prestamosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_prestamosMousePressed
        indexPrestamo = filtroTabla.convertRowIndexToModel(tabla_prestamos.getSelectedRow());
        anular_prestamo_seleccionado.setEnabled("Si".equals(((DefaultTableModel)tabla_prestamos.getModel()).getValueAt(indexPrestamo, 1).toString()));
        try {   // Obtención del detalle del Préstamo seleccionado
            ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                    .executeQuery("SELECT CodigoBoleta, FechaPago, Monto, Anulado, FechaAnulacion, RazonAnulacion FROM Prestamo WHERE Id = "+listaIDPrestamos.get(indexPrestamo));
            cConsulta.next();
            tabla_detalle_prestamo.setValueAt(cConsulta.getString("CodigoBoleta"), 0, 1);
            String[] fecha = cConsulta.getString("FechaPago").split("-");
            tabla_detalle_prestamo.setValueAt(fecha[2]+"/"+fecha[1]+"/"+fecha[0], 1, 1);
            tabla_detalle_prestamo.setValueAt("Q."+cConsulta.getString("Monto"), 2, 1);
            tabla_detalle_prestamo.setValueAt(cConsulta.getBoolean("Anulado")?"Si":"No", 3, 1);
            fecha = cConsulta.getString("FechaAnulacion").split("-");
            tabla_detalle_prestamo.setValueAt(fecha[2]+"/"+fecha[1]+"/"+fecha[0], 4, 1);
            motivo_prestamo_anulado.setText(cConsulta.getBoolean("Anulado") ? cConsulta.getString("RazonAnulacion") : "<No Anulado>");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se puede obtener los detalles del Préstamo seleccionado.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            limpiar_detalle_prestamo_seleccionado();
            Logger.getLogger(VerListadoPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabla_prestamosMousePressed

    private void anular_prestamo_seleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anular_prestamo_seleccionadoActionPerformed
        // Inhabilitación de componentes para evitar que se cambie de ciclo o que se seleccione otro Préstamo
        ciclo_escolar.setEnabled(false);
        filtrar_por.setEnabled(false);
        valor_a_filtrar.setEnabled(false);
        tabla_prestamos.setEnabled(false);
        anular_prestamo_seleccionado.setEnabled(false);
        panel_anular_prestamo_seleccionado.setVisible(true);    // Muestra del Panel donde se confirmará la anulación
        int index = tabla_prestamos.getSelectedRow();
        numero_prestamo.setText(tabla_prestamos.getValueAt(index, 0).toString());
    }//GEN-LAST:event_anular_prestamo_seleccionadoActionPerformed

    private void anular_prestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anular_prestamoActionPerformed
        if (fecha_anulacion.getDate() == null) {
            JOptionPane.showMessageDialog(this, "No ha especificado la Fecha de anulación del Préstamo seleccionado", "Error en datos", JOptionPane.ERROR_MESSAGE);
            return;
        } if (motivo_anulacion_seleccionado.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "No ha especificado el Motivo de anulación del Préstamo seleccionado", "Error en datos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Calendar fecha = fecha_anulacion.getCalendar();
            // Actualización del Préstamo seleccionado como Anulado
            conexion.prepareStatement("UPDATE Prestamo SET Anulado = 1,"
                    + " FechaAnulacion = '"+fecha.get(Calendar.YEAR)+"-"+(fecha.get(Calendar.MONTH)+1)+"-"+fecha.get(Calendar.DAY_OF_MONTH)+"', "
                    + " RazonAnulacion = '"+motivo_anulacion_seleccionado.getText()+"'"
                    + " WHERE Id = "+listaIDPrestamos.get(indexPrestamo)).executeUpdate();
            // Actualización del Paquete de Libros como disponible
            conexion.prepareStatement("UPDATE PaqueteLibro SET Prestado = 0"
                    + " WHERE Id = (SELECT PaqueteLibro_Id FROM Prestamo WHERE Id = "+listaIDPrestamos.get(indexPrestamo)+")").executeUpdate();
            JOptionPane.showMessageDialog(this, "Préstamo No. "+numero_prestamo.getText()+" anulado exitosamente", "Anular préstamo", JOptionPane.INFORMATION_MESSAGE);
            // Actualización y limpieza de los componentes implicados en la anulación
            ((DefaultTableModel)tabla_prestamos.getModel()).setValueAt("No", indexPrestamo, 1);
            ciclo_escolar.setEnabled(true);
            filtrar_por.setEnabled(true);
            valor_a_filtrar.setEnabled(true);
            tabla_prestamos.setEnabled(true);
            tabla_prestamos.removeRowSelectionInterval(0, tabla_prestamos.getRowCount()-1);
            limpiar_detalle_prestamo_seleccionado();
            numero_prestamo.setText("");
            fecha_anulacion.setDate(fechaActual);
            motivo_anulacion_seleccionado.setText("");
            panel_anular_prestamo_seleccionado.setVisible(false);
            indexPrestamo = -1;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se puede actualizar el registro del Préstamo seleccionado.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(VerListadoPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_anular_prestamoActionPerformed

    private void cancelar_anulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_anulacionActionPerformed
        ciclo_escolar.setEnabled(true);
        filtrar_por.setEnabled(true);
        valor_a_filtrar.setEnabled(true);
        tabla_prestamos.setEnabled(true);
        numero_prestamo.setText("");
        fecha_anulacion.setDate(fechaActual);
        motivo_anulacion_seleccionado.setText("");
        panel_anular_prestamo_seleccionado.setVisible(false);
    }//GEN-LAST:event_cancelar_anulacionActionPerformed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        ventanaPadre.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_regresarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ventanaPadre.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    public boolean getHacerVisible() { return hacerVisible; }
    private void limpiar_detalle_prestamo_seleccionado() {
        int cantidad = tabla_detalle_prestamo.getRowCount();   // Eliminación del detalle del último paquete seleccionado
        for(int i=0; i<cantidad; i++)
            tabla_detalle_prestamo.setValueAt("", i, 1);
        motivo_prestamo_anulado.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerListadoPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerListadoPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerListadoPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerListadoPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerListadoPrestamos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anular_prestamo;
    private javax.swing.JButton anular_prestamo_seleccionado;
    private javax.swing.JButton cancelar_anulacion;
    private javax.swing.JComboBox<String> ciclo_escolar;
    private com.toedter.calendar.JDateChooser fecha_anulacion;
    private javax.swing.JComboBox<String> filtrar_por;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea motivo_anulacion_seleccionado;
    private javax.swing.JTextArea motivo_prestamo_anulado;
    private javax.swing.JTextField numero_prestamo;
    private javax.swing.JPanel panel_anular_prestamo_seleccionado;
    private javax.swing.JPanel panel_listado_prestamos;
    private javax.swing.JButton regresar;
    private javax.swing.JTable tabla_detalle_prestamo;
    private javax.swing.JTable tabla_prestamos;
    private javax.swing.JTextField valor_a_filtrar;
    // End of variables declaration//GEN-END:variables
}
