/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulo_Prestamos;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wilson Xicará
 */
public class AnularTodosLosPrestamos extends javax.swing.JDialog {
    private Connection conexion;
    private boolean hacerVisible, ciclosCargados;
    private ArrayList<Integer> listaIDCiclos;
    private ArrayList<Boolean> listaCicloListo, listaCicloCerrado;
    private Date fechaActual;
    /**
     * Creates new form AnularTodosLosPrestamos
     */
    public AnularTodosLosPrestamos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public AnularTodosLosPrestamos(java.awt.Frame parent, Connection conexion) {
        super(parent, true);
        initComponents();
        this.conexion = conexion;
        hacerVisible = !(ciclosCargados = false);
        
        // Obtención de algunos datos desde la Base de Datos
        try {
            Statement sentencia = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
            ResultSet cConsulta;
            // Obtención de todos los Ciclos Escolares
            cConsulta = sentencia.executeQuery("SELECT Id, Anio, Listo, Cerrado FROM CicloEscolar");
            listaIDCiclos = new ArrayList<>();
            listaCicloListo = new ArrayList<>();
            listaCicloCerrado = new ArrayList<>();
            while(cConsulta.next()) {
                listaIDCiclos.add(cConsulta.getInt("Id"));
                listaCicloListo.add(cConsulta.getBoolean("Listo"));
                listaCicloCerrado.add(cConsulta.getBoolean("Cerrado"));
                ciclo_escolar.addItem(cConsulta.getString("Anio"));
            } ciclosCargados = true;
            if (listaIDCiclos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Aún no se han creado Ciclos Escolares,\npor lo que no existen Préstamos.", "Datos faltantes", JOptionPane.ERROR_MESSAGE);
                hacerVisible = false;
                return;
            }
            ciclo_escolar.setSelectedIndex(-1);
            ciclo_escolar.setSelectedIndex(ciclo_escolar.getItemCount()-1);
            // Obtención de la Fecha Actual
            cConsulta = sentencia.executeQuery("SELECT NOW()");
            cConsulta.next();
            fechaActual = cConsulta.getDate(1);
            // Otras configuraciones importantes
            tabla_prestamos.setShowHorizontalLines(true);  // Para mostrar los bordes de las celdas de la tabla
            tabla_prestamos.setShowVerticalLines(true);
            fecha_anulacion.setDate(fechaActual);
            fecha_anulacion.getJCalendar().setWeekOfYearVisible(false);  // Para no mostrar el número de semana en el Calendario
            this.setLocationRelativeTo(null);   // Para centrar esta ventana sobre la pantalla
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se puede extraer alguno de los registros.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(AnularTodosLosPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ciclo_escolar = new javax.swing.JComboBox<>();
        panel_listado_prestamos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_prestamos = new javax.swing.JTable();
        anular_prestamos = new javax.swing.JButton();
        panel_anular_todos_los_prestamos = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        fecha_anulacion = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        motivo_anulacion = new javax.swing.JTextArea();
        anular_todos_los_prestamos = new javax.swing.JButton();
        cancelar_anulacion = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Anulación de todos los Préstamos de Libros");

        jLabel1.setText("Ver Préstamo vigentes del Ciclo Escolar:");

        ciclo_escolar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ciclo_escolarItemStateChanged(evt);
            }
        });

        panel_listado_prestamos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Préstamos vigentes: _cantidad préstamo(s)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tabla_prestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Código de Boleta", "Monto", "Fecha de Pago", "Código del Paquete", "Estudiante", "Grado y Sección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla_prestamos);

        anular_prestamos.setText("Anular todos los Préstamo");
        anular_prestamos.setEnabled(false);
        anular_prestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anular_prestamosActionPerformed(evt);
            }
        });

        panel_anular_todos_los_prestamos.setBorder(javax.swing.BorderFactory.createTitledBorder("Anulación de todos los Préstamos:"));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Fecha anulación:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Motivo:");

        motivo_anulacion.setColumns(20);
        motivo_anulacion.setRows(5);
        jScrollPane3.setViewportView(motivo_anulacion);

        anular_todos_los_prestamos.setText("Anular todos");
        anular_todos_los_prestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anular_todos_los_prestamosActionPerformed(evt);
            }
        });

        cancelar_anulacion.setText("Cancelar");
        cancelar_anulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_anulacionActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Los campos en negrita son obligatorios");

        javax.swing.GroupLayout panel_anular_todos_los_prestamosLayout = new javax.swing.GroupLayout(panel_anular_todos_los_prestamos);
        panel_anular_todos_los_prestamos.setLayout(panel_anular_todos_los_prestamosLayout);
        panel_anular_todos_los_prestamosLayout.setHorizontalGroup(
            panel_anular_todos_los_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_anular_todos_los_prestamosLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3))
            .addGroup(panel_anular_todos_los_prestamosLayout.createSequentialGroup()
                .addGroup(panel_anular_todos_los_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(panel_anular_todos_los_prestamosLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecha_anulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_anular_todos_los_prestamosLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(anular_todos_los_prestamos)
                        .addGap(7, 7, 7)
                        .addComponent(cancelar_anulacion)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        panel_anular_todos_los_prestamosLayout.setVerticalGroup(
            panel_anular_todos_los_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_anular_todos_los_prestamosLayout.createSequentialGroup()
                .addGroup(panel_anular_todos_los_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(fecha_anulacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_anular_todos_los_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_anular_todos_los_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(anular_todos_los_prestamos)
                    .addComponent(cancelar_anulacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8))
        );

        javax.swing.GroupLayout panel_listado_prestamosLayout = new javax.swing.GroupLayout(panel_listado_prestamos);
        panel_listado_prestamos.setLayout(panel_listado_prestamosLayout);
        panel_listado_prestamosLayout.setHorizontalGroup(
            panel_listado_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_listado_prestamosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(anular_prestamos))
            .addGroup(panel_listado_prestamosLayout.createSequentialGroup()
                .addComponent(panel_anular_todos_los_prestamos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_listado_prestamosLayout.setVerticalGroup(
            panel_listado_prestamosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_listado_prestamosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anular_prestamos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_anular_todos_los_prestamos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_listado_prestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ciclo_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(regresar))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ciclo_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_listado_prestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ciclo_escolarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ciclo_escolarItemStateChanged
        int indexCiclo = ciclo_escolar.getSelectedIndex();
        if (ciclosCargados && evt.getStateChange()==ItemEvent.SELECTED && indexCiclo!=-1) {
            panel_anular_todos_los_prestamos.setVisible(false);
            try {   // Obtención de todos los Préstamos de Paquetes de Libros realizados en el Ciclo Escolar seleccionado
                ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                .executeQuery("SELECT Prestamo.CodigoBoleta, Prestamo.Monto, Prestamo.FechaPago, PaqueteLibro.Codigo codigoPaquete, CONCAT(Estudiante.Nombres, ' ', Estudiante.Apellidos) nombreEstudiante, CONCAT(Grado.Nombre, ' ', Grado.Seccion) gradoSeccion FROM Prestamo "
                    + "INNER JOIN PaqueteLibro ON Prestamo.PaqueteLibro_Id = PaqueteLibro.Id "
                    + "INNER JOIN AsignacionEST ON Prestamo.AsignacionEST_Id = AsignacionEST.Id "
                    + "INNER JOIN Estudiante ON AsignacionEST.Estudiante_Id = Estudiante.Id "
                    + "INNER JOIN Grado ON AsignacionEST.Grado_Id = Grado.Id "
                    + "WHERE AsignacionEST.CicloEscolar_Id = "+listaIDCiclos.get(indexCiclo)+" AND Prestamo.Anulado = 0");
                DefaultTableModel modelPrestamos = (DefaultTableModel)tabla_prestamos.getModel();
                modelPrestamos.setRowCount(0);
                int contador = 0;
                while(cConsulta.next()) {
                    String[] fecha = cConsulta.getString("FechaPago").split("-");
                    modelPrestamos.addRow(new String[]{
                        ""+(++contador),
                        cConsulta.getString("CodigoBoleta"),
                        "Q. "+cConsulta.getString("Monto"),
                        fecha[2]+"/"+fecha[1]+"/"+fecha[0],
                        cConsulta.getString("codigoPaquete"),
                        cConsulta.getString("nombreEstudiante"),
                        cConsulta.getString("gradoSeccion")
                    });
                }
                panel_listado_prestamos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Préstamos vigentes: "+contador+" préstamo"+(contador==1?"":"s"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)));
                anular_prestamos.setEnabled(contador > 0);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "No se puede obtener el listado de Préstamos del Ciclo Escolar "+ciclo_escolar.getSelectedItem().toString()+".\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(VerListadoPrestamos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ciclo_escolarItemStateChanged

    private void anular_prestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anular_prestamosActionPerformed
        // Inhabilitación de componentes para evitar que se cambie de ciclo o que se seleccione otro Préstamo
        ciclo_escolar.setEnabled(false);
        anular_prestamos.setEnabled(false);
        panel_anular_todos_los_prestamos.setVisible(true);    // Muestra del Panel donde se confirmará la anulación
    }//GEN-LAST:event_anular_prestamosActionPerformed

    private void anular_todos_los_prestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anular_todos_los_prestamosActionPerformed
        if (fecha_anulacion.getDate() == null) {
            JOptionPane.showMessageDialog(this, "No ha especificado la Fecha de anulación del Préstamo seleccionado", "Error en datos", JOptionPane.ERROR_MESSAGE);
            return;
        } if (motivo_anulacion.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "No ha especificado el Motivo de anulación del Préstamo seleccionado", "Error en datos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int cantidad = tabla_prestamos.getRowCount();
        int opcion = JOptionPane.showOptionDialog(this,
                "Está a punto de anular"+(cantidad==1?" el único préstamo":" los "+cantidad+" préstamos")+" del Ciclo Escolar "+ciclo_escolar.getSelectedItem().toString()
                        + "\nNo podrá revertir esta acción."
                        + "\n\nDesea continuar?",
                "Anulación de todos los Préstamos", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
        if (opcion == JOptionPane.YES_OPTION) {
            int indexCiclo = ciclo_escolar.getSelectedIndex();
            try {   // Actualización de todos los Préstamos mostrados como Anulado
                conexion.prepareStatement("START TRANSACTION");
                Calendar fecha = fecha_anulacion.getCalendar();
                // La función de la Base de Datos se llama como sigue: 'anularPrestamos(_idCicloEscolar, _fechaAnulacion, _razonAnulacion)'
                ResultSet cConsulta = conexion.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)
                        .executeQuery("SELECT anularPrestamos("+listaIDCiclos.get(indexCiclo)+", '"+fecha.get(Calendar.YEAR)+"-"+(fecha.get(Calendar.MONTH)+1)+"-"+fecha.get(Calendar.DAY_OF_MONTH)+"', '"+motivo_anulacion.getText()+"')");
                cConsulta.next();
                cantidad = cConsulta.getInt(1); // Dicha función retorna la cantidad de préstamos anulados
                JOptionPane.showMessageDialog(this, "Se ha"+(cantidad==1?"":"n")+" anulado "+cantidad+" préstamo"+(cantidad==1?"":"s")+" exitosamente", "Anular préstamos", JOptionPane.INFORMATION_MESSAGE);
                fecha_anulacion.setDate(fechaActual);   // Limpieza de campos
                motivo_anulacion.setText("");
                cantidad = ciclo_escolar.getSelectedIndex();    // Actualización de los Préstamos del Ciclo Escolar seleccionado
                ciclo_escolar.setSelectedIndex(-1);
                ciclo_escolar.setSelectedIndex(cantidad);
                conexion.prepareStatement("COMMIT;");
            } catch (SQLException ex) {
                try {
                    conexion.prepareStatement("ROLLBACK;");
                    JOptionPane.showMessageDialog(this, "No se puede actualizar los registros de los Préstamos mostrados.\n\nDescripción:\n"+ex.getMessage(), "Error en conexión", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(VerListadoPrestamos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex1) {
                    Logger.getLogger(AnularTodosLosPrestamos.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        }
    }//GEN-LAST:event_anular_todos_los_prestamosActionPerformed

    private void cancelar_anulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_anulacionActionPerformed
        ciclo_escolar.setEnabled(true);
        fecha_anulacion.setDate(fechaActual);
        motivo_anulacion.setText("");
        panel_anular_todos_los_prestamos.setVisible(false);
    }//GEN-LAST:event_cancelar_anulacionActionPerformed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_regresarActionPerformed

    public boolean getHacerVisible() { return hacerVisible; }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnularTodosLosPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AnularTodosLosPrestamos dialog = new AnularTodosLosPrestamos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anular_prestamos;
    private javax.swing.JButton anular_todos_los_prestamos;
    private javax.swing.JButton cancelar_anulacion;
    private javax.swing.JComboBox<String> ciclo_escolar;
    private com.toedter.calendar.JDateChooser fecha_anulacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea motivo_anulacion;
    private javax.swing.JPanel panel_anular_todos_los_prestamos;
    private javax.swing.JPanel panel_listado_prestamos;
    private javax.swing.JButton regresar;
    private javax.swing.JTable tabla_prestamos;
    // End of variables declaration//GEN-END:variables
}
